@startuml

class Board
{
    +{static} Color : char[,] [0..*] = {'x', 'o'}
    
    -tokens : char[,] [0..*]
        
    +Board()
    
    +IsTicTacToe() : bool
    -IsTicTacToe(token : char) : bool
    +IsComplete() : bool
    -IsTileEmpty(coord : Coord) : bool
    -IsTileFull(coord : Coord) : bool
    
    +ToString() : string
}
Board ..> IO

class IO <<static>>
{
    +ReadString(title : string) : string {static}
    +ReadInt(title : string) : int {static}
    
    +Write(title : string) {static}
    +WriteLn() {static}
    +WriteError(format : string) {static}
}

class Coord
{
    +Row : int {get}
    +Col : int {get}
    
    +Read(title: string)
    +Equals(other: Coord)
}
Coord <.. Board
Coord <.. Player

class LimitedIntDialog
{
    -title : string
    -min : int
    -max : int
    
    +LimitedIntDialog(title: string, max: int)
    +LimitedIntDialog(title: string, min: int, max :int)
    
    +Read() : int
}
LimitedIntDialog <.. Coord
LimitedIntDialog ..> IO

class Player
{
    ~color : char
    
    +Player(i: int)
    +Put(board : Board)
    +Put(board : Board, fromCoord : Coord)
    +Move(board : Board)
    +Win()
}
Player ..> IO

class Turn
{
    ~value : int = 0
    +Turn()
    +Current() << "Take" >>
    +Next() << "NotTake">>
    +Change()
}

class TicTacToe
{
    -turn : Turn
    -board : Board 
    -players : Player[] [0..*]
    
    +TicTacToe()
    +Play()
}
TicTacToe --> Board
TicTacToe --> Player
TicTacToe --> Turn
@enduml